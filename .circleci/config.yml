version: 2.1
orbs:
  cypress: cypress-io/cypress@1
  docker: circleci/docker@0.5.17
executors:
  ebs:
    docker:
      - image: larrykirschner/circleci-elasticbeanstalk:1.0.0
  node:
    docker:
      - image: circleci/node:14.15
aliases:
  # setup env vars for ebs tools
  - &build-tools-install
    name: Install build tools
    command: sudo apt-get update && sudo apt-get install rsync
  - &configure-as-dev
    name: Configure env for opentutor-dev
    command: |
      echo 'export EB_ENV=opentutor-dev' >> $BASH_ENV \
      && echo 'export ENV=opentutor-dev' >> $BASH_ENV \
      && echo 'export NODE_ENV=opentutor-dev' >> $BASH_ENV
  - &configure-as-qa
    name: Configure env for opentutor-qa
    command: |
      echo 'export EB_ENV=opentutor-qa' >> $BASH_ENV \
      && echo 'export ENV=opentutor-qa' >> $BASH_ENV \
      && echo 'export NODE_ENV=opentutor-qa' >> $BASH_ENV
  - &configure-as-production
    name: Configure env for production
    command: |
      echo 'export ENV=production' >> $BASH_ENV \
      && echo 'export NODE_ENV=production' >> $BASH_ENV
  - &configure-as-green
    name: Configure env for opentutor-green
    command: echo 'export EB_ENV=opentutor-green' >> $BASH_ENV
  - &configure-as-blue
    name: Configure env for opentutor-blue
    command: echo 'export EB_ENV=opentutor-blue' >> $BASH_ENV
  - &eb-deploy
    name: EBS Deploy
    command: |
      cd ${EBS_TOOLS} && \
        EB_APP=opentutor make clean build \
        && cp -r ~/project/nginx build/ebs/bundle/nginx \
        && mkdir -p build/ebs/bundle/classifier \
        && cp -r ~/project/models build/ebs/bundle/classifier/models \
        && cp -r ~/project/shared build/ebs/bundle/classifier/shared \
        && EB_APP=opentutor make eb-deploy
  - &env-init
    name: Init EBS env
    command: eval $EBS_TOOLS_ENV_INIT
  - &only-master
    branches:
      only:
        - master
  - &only-prod-releases
    tags:
      only: /v[0-9]+(\.[0-9]+)*(-prod)(-[a-z\d\-.]+)?/
    branches:
      ignore: /.*/
  - &git-lfs-install
    run:
      name: Git lfs install
      command: |
        curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash \
          && sudo apt-get install -y git-lfs \
          && git lfs install
  - &git-lfs-pull
    run:
      name: Git lfs pull
      command: git lfs pull
  - &checkout-revision-restore
    restore_cache:
      keys:
        - source-v1-{{ .Branch }}-{{ .Revision }}
        - source-v1-{{ .Branch }}-
        - source-v1-
  - &checkout-revision-save
    save_cache:
      key: source-v1-{{ .Branch }}-{{ .Revision }}
      paths:
        - ".git"
jobs:
  test-format:
    executor: node
    steps:
      - checkout
      - run:
          name: Test format
          command: npm ci && npm run test:format
  test-license:
    executor: node
    steps:
      - checkout
      - run:
          name: Test license
          command: make test-license
  test-cypress:
    machine:
      docker_layer_caching: false
    steps:
      - *git-lfs-install
      - checkout
      - *git-lfs-pull
      - run:
          name: Start cypress
          command: make test
  checkout-revision-setup:
    executor: python
    steps:
      - *checkout-revision-restore
      - *git-lfs-install
      - checkout
      - *git-lfs-pull
      - *checkout-revision-save
  ebs-deploy-dev:
    executor: ebs
    steps:
      - *git-lfs-install
      - checkout
      - *git-lfs-pull
      - run: *env-init
      - run: *configure-as-dev
      - run: *eb-deploy
workflows:
  version: 2
  test-and-deploy-dev:  # deploy code/content to dev waits for approval
    jobs:
      - test-format
      - test-license
      - test-cypress
      - approve-to-dev:
          type: approval
          requires:
            - test-format
            - test-license
            - test-cypress
      - ebs-deploy-dev:
          requires:
            - approve-to-dev
